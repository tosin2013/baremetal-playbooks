name: Equinix Metal baremetal Workflow

on:
  workflow_dispatch:
    inputs:
      NEW_HOST:
        description: 'New Server Host'
        required: true
        type: string
        default: 'new_server.example.com'
      NEW_USERNAME:
        description: 'New Server Username'
        required: true
        type: string
        default: 'new_admin'
      NEW_DOMAIN:
        description: 'New Domain'
        required: true
        type: string
        default: 'example.com'
      NEW_FORWARDER:
        description: 'New Forwarder'
        required: true
        type: string
        default: '8.8.8.8'
      FREEIPA_SERVER_FQDN:
        description: 'FreeIPA Server FQDN'
        required: true
        type: string
        default: 'ipa.example.com'
      FREEIPA_SERVER_DOMAIN:
        description: 'FreeIPA Server Domain'
        required: true
        type: string
        default: 'example.com'
      GUID:
        description: 'GUID'
        required: true
        type: string
        default: 'default_guid'
      OLLAMA:
        description: 'OLLAMA'
        required: true
        type: string
        default: 'default_ollama'

jobs:
  bootstrap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python and Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip jq sshpass ansible
          pip3 install -r requirements.txt
          ansible-galaxy install collections -r _build/requirements.yml

      - name: Set Up HCP CLI
        run: |
          sudo apt-get update && \
          sudo apt-get install wget gpg coreutils
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install hcp

      - name: Copy env.sample.vaultproject to .env and override default variables
        run: |
          echo 'export NEW_HOST="${{ inputs.NEW_HOST }}"' >> .env
          echo 'export NEW_USERNAME="${{ inputs.NEW_USERNAME }}"' >> .env
          echo 'export SSH_PASSWORD="${{ secrets.SSH_PASSWORD }}"' >> .env
          echo 'export NEW_DOMAIN="${{ inputs.NEW_DOMAIN }}"' >> .env
          echo 'export ZONE_NAME="${{ inputs.NEW_DOMAIN }}"' >> .env
          echo 'export NEW_FORWARDER="${{ inputs.NEW_FORWARDER }}"' >> .env
          echo 'export CICD_ENVIORNMENT="github"' >> .env
          echo 'export USE_ROUTE53=true' >> .env
          echo 'export FREEIPA_SERVER_FQDN="ipa.${{ inputs.GUID }}.example.com"' >> .env
          echo 'export FREEIPA_SERVER_DOMAIN="${{ inputs.GUID }}.example.com"' >> .env
          echo 'export FREEIPA_SERVER_ADMIN_PASSWORD="CHANGEME"' >> .env
          echo 'export USE_VAULT=true' >> .env
          echo 'export GUID="${{ inputs.GUID }}"' >> .env
          echo 'export OLLAMA="${{ inputs.OLLAMA }}"' >> .env
          echo 'export HCP_CLIENT_ID="${{ secrets.HCP_CLIENT_ID }}"' >> .env
          echo 'export HCP_CLIENT_SECRET="${{ secrets.HCP_CLIENT_SECRET }}"' >> .env
          echo 'export HCP_PROJECT_ID="${{ secrets.HCP_PROJECT_ID }}"' >> .env
          echo 'export APP_NAME="${{ secrets.APP_NAME }}"' >> .env
          echo 'export AWS_SECRET_KEY="${{ secrets.AWS_SECRET_KEY }}"' >> .env
          echo 'export AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}"' >> .env

      - name: Set Executable Permissions
        run: chmod +x bootstrap.sh

      - name: Copy SSH Key to Target Host
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: ./copy-ssh-id-and-test.sh "${{ inputs.NEW_USERNAME }}" "${{ inputs.NEW_HOST }}" 

      - name: Run bootstrap.sh Script
        env:
          HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
          HCP_ORG_ID: ${{ secrets.HCP_ORG_ID }}
          HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}
          APP_NAME: ${{ secrets.APP_NAME }}
          USE_VAULT: ${{ secrets.USE_VAULT }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          GUID: ${{ inputs.GUID }}
          OLLAMA: ${{ inputs.OLLAMA }}
          CICD_ENVIORNMENT: github
        run: |
          source .env
          cat .env
          #export inputs='{"NEW_HOST": "${NEW_HOST}", "NEW_USERNAME": "${NEW_USERNAME}", "NEW_DOMAIN": "${NEW_DOMAIN}", "NEW_FORWARDER": "${NEW_FORWARDER}", "FREEIPA_SERVER_FQDN": "${FREEIPA_SERVER_FQDN}", "FREEIPA_SERVER_DOMAIN": "${FREEIPA_SERVER_DOMAIN}", "GUID": "${GUID}", "OLLAMA": "${OLLAMA}", "CICD_ENVIORNMENT": "${CICD_ENVIORNMENT}"}'
          bash -x ./bootstrap.sh --push-ssh-key --push-pipeline-vars --trigger-github-pipelines --load-from-vault || exit $?
