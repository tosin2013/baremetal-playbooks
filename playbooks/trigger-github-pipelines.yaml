---
- name: Update GitHub Secret and Trigger Pipeline
  hosts: github_servers
  gather_facts: no

  tasks:
    - name: Get repository public key
      uri:
        url: "https://api.github.com/repos/{{ github_repo }}/actions/secrets/public-key"
        method: GET
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
      register: public_key_response
      delegate_to: "{{ inventory_hostname }}" 
      when: configure_secrets | bool


    - name: Debug public_key_response
      debug:
        var: public_key_response
      delegate_to: "{{ inventory_hostname }}"
      when: configure_secrets | bool

    - name: Get the key_id
      set_fact:
        key_id: "{{ public_key_response.json.key_id }}"
      delegate_to: "{{ inventory_hostname }}" 
      when: configure_secrets | bool

    - name: Debug public_key_response
      debug:
        var: public_key_response
      delegate_to: "{{ inventory_hostname }}"
      when: configure_secrets | bool

    - name: Debug key_id if it fails exit
      debug:
        msg: "key_id is {{ key_id }}"
      delegate_to: "{{ inventory_hostname }}" 
      failed_when: key_id is not defined
      when: configure_secrets | bool

    - name: Encrypt secret
      script: scripts/encrypt_secret.py
      environment:
        PUBLIC_KEY: "{{ public_key_response.json.key }}"
        SECRET: "{{ ssh_password }}"
      register: encrypted_secret
      delegate_to:  localhost
      when: configure_secrets | bool

    #- name: Fail if encrypted_secret is empty
    #  fail:
    #    msg: "encrypted_secret is empty"
    #  when: encrypted_secret.stdout is not defined or encrypted_secret.stdout == '' 
  
    - name: if encrypted_secret is empty exit
      debug:
        msg: "encrypted_secret is {{ encrypted_secret.stdout }}"
      delegate_to: "{{ inventory_hostname }}" 
      when: configure_secrets | bool

    - name: Update secret on GitHub
      uri:
        url: "https://api.github.com/repos/{{ github_repo }}/actions/secrets/{{ secret_name }}"
        method: PUT
        body: >
          {
            "encrypted_value": "{{ encrypted_secret.stdout | trim  }}",
            "key_id": "{{ key_id }}"
          }
        body_format: json
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: 204
      delegate_to: "{{ inventory_hostname }}"
      when: configure_secrets | bool

    - name: Wait for 1 minutes before pipeline run
      pause:
        minutes: 1
      when: configure_secrets | bool

    - name: Get workflows
      uri:
        url: "{{ github_api_url }}/repos/{{ github_repo }}/actions/workflows"
        method: GET
        headers:
          Authorization: "Bearer {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
      register: workflows_response

    - name: Find workflow ID
      set_fact:
        workflow_id: "{{ item.id }}"
      loop: "{{ workflows_response.json.workflows }}"
      when: item.name == workflow_file_name

    - name: Trigger GitHub Actions Workflow
      uri:
        url: "{{ github_api_url }}/repos/{{ github_repo }}/actions/workflows/{{ workflow_id }}/dispatches"
        method: POST
        body: "{{ json_body }}"
        body_format: json
        headers:
          Authorization: "Bearer {{ github_token }}"
          Content-Type: "application/json"
          Accept: "application/vnd.github.v3+json"
        status_code: 204
      register: response

    - name: Get workflow runs
      uri:
        url: "{{ github_api_url }}/repos/{{ github_repo }}/actions/runs"
        method: GET
        headers:
          Authorization: "Bearer {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
      register: runs_response

    - name: Find run URL
      set_fact:
        run_url: "{{ item.html_url }}"
      loop: "{{ runs_response.json.workflow_runs }}"
      when: item.workflow_id == workflow_id and item.head_sha == workflow_ref

    - name: Display Pipeline Run URL
      debug:
        msg: "Pipeline run triggered. You can view it at: {{ run_url }}"
      when: run_url is defined